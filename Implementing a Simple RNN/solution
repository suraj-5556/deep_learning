import numpy as np

def rnn_forward(input_sequence: list[list[float]], initial_hidden_state: list[float], Wx: list[list[float]], Wh: list[list[float]], b: list[float]) -> list[float]:
	# Your code here
    h=[]
    input_sequence=np.array(input_sequence)
    initial_hidden_state=np.array(initial_hidden_state)
    Wx=np.array(Wx)
    Wh=np.array(Wh)
    b=np.array(b)
    for i in range (0,len(input_sequence)):
        # if len(b)==1:
        initial_hidden_state=np.tanh(np.dot(Wx,input_sequence[i])+np.dot(Wh,initial_hidden_state)+b)
            #h.append(initial_hidden_state)
        # else:
        #     initial_hidden_state=np.tanh(np.dot(input_sequence,Wx)+np.dot(initial_hidden_state,Wh)+b)
        #     # for j in range (0,len(initial_hidden_state)):
        #     #     initial_hidden_state[j]=np.tanh(np.dot(input_sequence[i],Wx[i])+np.dot(initial_hidden_state[j],Wh[i][j])+b[i])
        #     h.append(initial_hidden_state)
	return np.round(initial_hidden_state,4)
